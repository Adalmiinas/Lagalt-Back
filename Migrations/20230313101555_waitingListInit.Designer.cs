// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lagalt;

#nullable disable

namespace lagalt.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230313101555_waitingListInit")]
    partial class waitingListInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lagalt.UserInWaitingListModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<bool>("PendingStatus")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WaitListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WaitListId");

                    b.ToTable("UsersInWaitingLists");
                });

            modelBuilder.Entity("Lagalt.WaitListModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.HasKey("Id");

                    b.ToTable("WaitLists");
                });

            modelBuilder.Entity("ProjectModelSkillModel", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ProjectModelSkillModel");
                });

            modelBuilder.Entity("ProjectModelTagModel", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ProjectModelTagModel");
                });

            modelBuilder.Entity("SkillModelUserModel", b =>
                {
                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SkillsId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("SkillModelUserModel");
                });

            modelBuilder.Entity("lagaltApp.ChatMessageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("ChatMessagesContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("lagaltApp.ChatModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectModelId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("lagaltApp.IndustryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("lagaltApp.MessageBoardModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectModelId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModelId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectModelId");

                    b.HasIndex("UserModelId");

                    b.ToTable("MessageBoards");
                });

            modelBuilder.Entity("lagaltApp.PhotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserModelId")
                        .IsUnique();

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("lagaltApp.ProjectImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectModelId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectModelId")
                        .IsUnique();

                    b.ToTable("projectImages");
                });

            modelBuilder.Entity("lagaltApp.ProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitRepositoryUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WaitListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.HasIndex("WaitListId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("lagaltApp.ProjectUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("lagaltApp.SearchWordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Word")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("searchWords");
                });

            modelBuilder.Entity("lagaltApp.SkillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("skills");
                });

            modelBuilder.Entity("lagaltApp.TagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("lagaltApp.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CareerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portfolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lagalt.UserInWaitingListModel", b =>
                {
                    b.HasOne("lagaltApp.UserModel", "User")
                        .WithMany("UsersInWaitingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lagalt.WaitListModel", "WaitList")
                        .WithMany("UserWaitingLists")
                        .HasForeignKey("WaitListId");

                    b.Navigation("User");

                    b.Navigation("WaitList");
                });

            modelBuilder.Entity("ProjectModelSkillModel", b =>
                {
                    b.HasOne("lagaltApp.ProjectModel", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagaltApp.SkillModel", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectModelTagModel", b =>
                {
                    b.HasOne("lagaltApp.ProjectModel", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagaltApp.TagModel", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillModelUserModel", b =>
                {
                    b.HasOne("lagaltApp.SkillModel", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagaltApp.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lagaltApp.ChatMessageModel", b =>
                {
                    b.HasOne("lagaltApp.ChatModel", "Chat")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagaltApp.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lagaltApp.ChatModel", b =>
                {
                    b.HasOne("lagaltApp.ProjectModel", "ProjectModel")
                        .WithMany("Chats")
                        .HasForeignKey("ProjectModelId");

                    b.Navigation("ProjectModel");
                });

            modelBuilder.Entity("lagaltApp.MessageBoardModel", b =>
                {
                    b.HasOne("lagaltApp.ProjectModel", "ProjectModel")
                        .WithMany("MessageBoards")
                        .HasForeignKey("ProjectModelId");

                    b.HasOne("lagaltApp.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("UserModelId");

                    b.Navigation("ProjectModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("lagaltApp.PhotoModel", b =>
                {
                    b.HasOne("lagaltApp.UserModel", "UserModel")
                        .WithOne("Photo")
                        .HasForeignKey("lagaltApp.PhotoModel", "UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("lagaltApp.ProjectImageModel", b =>
                {
                    b.HasOne("lagaltApp.ProjectModel", "Project")
                        .WithOne("projectImage")
                        .HasForeignKey("lagaltApp.ProjectImageModel", "ProjectModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("lagaltApp.ProjectModel", b =>
                {
                    b.HasOne("lagaltApp.IndustryModel", "Industry")
                        .WithMany("Projects")
                        .HasForeignKey("IndustryId");

                    b.HasOne("Lagalt.WaitListModel", "WaitList")
                        .WithMany()
                        .HasForeignKey("WaitListId");

                    b.Navigation("Industry");

                    b.Navigation("WaitList");
                });

            modelBuilder.Entity("lagaltApp.ProjectUserModel", b =>
                {
                    b.HasOne("lagaltApp.ProjectModel", "Project")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lagaltApp.UserModel", "User")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lagaltApp.SearchWordModel", b =>
                {
                    b.HasOne("lagaltApp.UserModel", "User")
                        .WithMany("SearchWords")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lagalt.WaitListModel", b =>
                {
                    b.Navigation("UserWaitingLists");
                });

            modelBuilder.Entity("lagaltApp.ChatModel", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("lagaltApp.IndustryModel", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("lagaltApp.ProjectModel", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("MessageBoards");

                    b.Navigation("ProjectUsers");

                    b.Navigation("projectImage");
                });

            modelBuilder.Entity("lagaltApp.UserModel", b =>
                {
                    b.Navigation("Photo");

                    b.Navigation("ProjectUsers");

                    b.Navigation("SearchWords");

                    b.Navigation("UsersInWaitingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
